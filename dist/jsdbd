#!/usr/bin/env node
"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var path=require("path"),os=require("os"),child_process=require("child_process"),http=require("http"),http__default=_interopDefault(http),EventEmitter=_interopDefault(require("events")),fs$1=_interopDefault(require("fs")),net=require("net"),s=1e3,m=60*s,h=60*m,d=24*h,w=7*d,y=365.25*d,ms=function(e,t){t=t||{};var s=typeof e;if("string"===s&&e.length>0)return parse(e);if("number"===s&&isFinite(e))return t.long?fmtLong(e):fmtShort(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))};function parse(e){if(!((e=String(e)).length>100)){var t=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(t){var r=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return r*y;case"weeks":case"week":case"w":return r*w;case"days":case"day":case"d":return r*d;case"hours":case"hour":case"hrs":case"hr":case"h":return r*h;case"minutes":case"minute":case"mins":case"min":case"m":return r*m;case"seconds":case"second":case"secs":case"sec":case"s":return r*s;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return r;default:return}}}}function fmtShort(e){var t=Math.abs(e);return t>=d?Math.round(e/d)+"d":t>=h?Math.round(e/h)+"h":t>=m?Math.round(e/m)+"m":t>=s?Math.round(e/s)+"s":e+"ms"}function fmtLong(e){var t=Math.abs(e);return t>=d?plural(e,t,d,"day"):t>=h?plural(e,t,h,"hour"):t>=m?plural(e,t,m,"minute"):t>=s?plural(e,t,s,"second"):e+" ms"}function plural(e,t,s,r){var i=t>=1.5*s;return Math.round(e/s)+" "+r+(i?"s":"")}function toArr(e){return null==e?[]:Array.isArray(e)?e:[e]}function toVal(e,t,s,r){var i,n=e[t],o=~r.string.indexOf(t)?null==s||!0===s?"":String(s):"boolean"==typeof s?s:~r.boolean.indexOf(t)?"false"!==s&&("true"===s||(e._.push(0*(i=+s)==0?i:s),!!s)):0*(i=+s)==0?i:s;e[t]=null==n?o:Array.isArray(n)?n.concat(o):[n,o]}var lib=function(e,t){t=t||{};var s,r,i,n,o,a={_:[]},c=0,l=0,d=0,u=(e=e||[]).length;const h=void 0!==t.alias,p=void 0!==t.unknown,f=void 0!==t.default;if(t.alias=t.alias||{},t.string=toArr(t.string),t.boolean=toArr(t.boolean),h)for(s in t.alias)for(r=t.alias[s]=toArr(t.alias[s]),c=0;c<r.length;c++)(t.alias[r[c]]=r.concat(s)).splice(c,1);if(t.boolean.forEach(e=>{t.boolean=t.boolean.concat(t.alias[e]=t.alias[e]||[])}),t.string.forEach(e=>{t.string=t.string.concat(t.alias[e]=t.alias[e]||[])}),f)for(s in t.default)t.alias[s]=t.alias[s]||[],(t[typeof t.default[s]]||[]).push(s);const m=p?Object.keys(t.alias):[];for(c=0;c<u;c++){if("--"===(i=e[c])){a._=a._.concat(e.slice(++c));break}for(l=0;l<i.length&&45===i.charCodeAt(l);l++);if(0===l)a._.push(i);else if("no-"===i.substring(l,l+3)){if(n=i.substring(l+3),p&&!~m.indexOf(n))return t.unknown(i);a[n]=!1}else{for(d=l+1;d<i.length&&61!==i.charCodeAt(d);d++);for(n=i.substring(l,d),o=i.substring(++d)||c+1===u||45===(""+e[c+1]).charCodeAt(0)||e[++c],r=2===l?[n]:n,d=0;d<r.length;d++){if(n=r[d],p&&!~m.indexOf(n))return t.unknown("-".repeat(l)+n);toVal(a,n,d+1<r.length||o,t)}}}if(f)for(s in t.default)void 0===a[s]&&(a[s]=t.default[s]);if(h)for(s in a)for(r=t.alias[s]||[];r.length>0;)a[r.shift()]=a[s];return a};const GAP=4,__="  ",ALL="__all__",DEF="__default__",NL="\n";function format(e){if(!e.length)return"";let t=maxLen(e.map(e=>e[0]))+GAP;return e.map(e=>e[0]+" ".repeat(t-e[0].length)+e[1]+(null==e[2]?"":`  (default ${e[2]})`))}function maxLen(e){let t=0,s=0,r=0,i=e.length;if(i)for(;i--;)s=e[i].length,s>t&&(r=i,t=s);return e[r].length}function noop(e){return e}function section(e,t,s){if(!t||!t.length)return"";let r=0,i="";for(i+=NL+__+e;r<t.length;r++)i+=NL+__+__+s(t[r]);return i+NL}var help=function(e,t,s,r){let i="",n=t[s],o=`$ ${e}`,a=t[ALL],c=e=>`${o} ${e}`.replace(/\s+/g," "),l=[["-h, --help","Displays this message"]];if(s===DEF&&l.unshift(["-v, --version","Displays current version"]),n.options=(n.options||[]).concat(a.options,l),n.options.length>0&&(n.usage+=" [options]"),i+=section("Description",n.describe,noop),i+=section("Usage",[n.usage],c),r||s!==DEF)r||s===DEF||(i+=section("Aliases",n.alibi,c));else{let e=Object.keys(t).filter(e=>!/__/.test(e)),s=e.map(e=>[e,(t[e].describe||[""])[0]]);i+=section("Available Commands",format(s),noop),i+=NL+__+"For more info, run any command with the `--help` flag",e.slice(0,2).forEach(e=>{i+=NL+__+__+`${o} ${e} --help`}),i+=NL}return i+=section("Options",format(n.options),noop),i+=section("Examples",n.examples.map(c),noop),i},error=function(e,t,s=1){let r=section("ERROR",[t],noop);r+=NL+__+`Run \`$ ${e} --help\` for more info.`+NL,console.error(r),process.exit(s)},parse$1=function(e){return(e||"").split(/^-{1,2}|,|\s+-{1,2}|\s+/).filter(Boolean)},sentences=function(e){return(e||"").replace(/([.?!])\s*(?=[A-Z])/g,"$1|").split("|")},utils={help:help,error:error,parse:parse$1,sentences:sentences};const ALL$1="__all__",DEF$1="__default__";class Sade{constructor(e,t){let[s,...r]=e.split(/\s+/);t=t||r.length>0,this.bin=s,this.ver="0.0.0",this.default="",this.tree={},this.command(ALL$1),this.command([DEF$1].concat(t?r:"<command>").join(" ")),this.single=t,this.curr=""}command(e,t,s={}){if(this.single)throw new Error('Disable "single" mode to add commands');let r=[],i=[],n=/(\[|<)/;if(e.split(/\s+/).forEach(e=>{(n.test(e.charAt(0))?i:r).push(e)}),r=r.join(" "),r in this.tree)throw new Error(`Command already exists: ${r}`);return r.includes("__")||i.unshift(r),i=i.join(" "),this.curr=r,s.default&&(this.default=r),this.tree[r]={usage:i,alibi:[],options:[],alias:{},default:{},examples:[]},s.alias&&this.alias(s.alias),t&&this.describe(t),this}describe(e){return this.tree[this.curr||DEF$1].describe=Array.isArray(e)?e:utils.sentences(e),this}alias(...e){if(this.single)throw new Error('Cannot call `alias()` in "single" mode');if(!this.curr)throw new Error("Cannot call `alias()` before defining a command");return this.tree[this.curr].alibi=this.tree[this.curr].alibi.concat(...e),this}option(e,t,s){let r=this.tree[this.curr||ALL$1],[i,n]=utils.parse(e);if(n&&n.length>1&&([i,n]=[n,i]),e=`--${i}`,n&&n.length>0){e=`-${n}, ${e}`;let t=r.alias[n];r.alias[n]=(t||[]).concat(i)}let o=[e,t||""];return void 0!==s?(o.push(s),r.default[i]=s):n||(r.default[i]=void 0),r.options.push(o),this}action(e){return this.tree[this.curr||DEF$1].handler=e,this}example(e){return this.tree[this.curr||DEF$1].examples.push(e),this}version(e){return this.ver=e,this}parse(e,t={}){let s,r,i,n=2,o=lib(e.slice(n),{alias:{h:"help",v:"version"}}),a=this.single,c=this.bin,l="";if(a)i=this.tree[DEF$1];else{let t,a=1,d=o._.length+1;for(;a<d;a++)if(s=o._.slice(0,a).join(" "),void 0!==this.tree[s])l=s,n=a+2;else for(t in this.tree)if(this.tree[t].alibi.includes(s)){l=t,n=a+2;break}if(i=this.tree[l],r=void 0===i,r)if(this.default)l=this.default,i=this.tree[l],e.unshift(l),n++;else if(s)return utils.error(c,`Invalid command: ${s}`)}if(o.help)return this.help(!a&&!r&&l);if(o.version)return this._version();if(!a&&void 0===i)return utils.error(c,"No command specified.");let d=this.tree[ALL$1];t.alias=Object.assign(d.alias,i.alias,t.alias),t.default=Object.assign(d.default,i.default,t.default);let u=lib(e.slice(n),t);if(!u||"string"==typeof u)return utils.error(c,u||"Parsed unknown option flag(s)!");let h=i.usage.split(/\s+/),p=h.filter(e=>"<"===e.charAt(0)),f=u._.splice(0,p.length);if(f.length<p.length)return l&&(c+=` ${l}`),utils.error(c,"Insufficient arguments!");h.filter(e=>"["===e.charAt(0)).forEach(e=>{f.push(u._.shift())}),f.push(u);let m=i.handler;return t.lazy?{args:f,name:l,handler:m}:m.apply(null,f)}help(e){console.log(utils.help(this.bin,this.tree,e||DEF$1,this.single))}_version(){console.log(`${this.bin}, ${this.ver}`)}}var lib$1=(e,t)=>new Sade(e,t);function stoppable(e){const t=new Map;let s=!1;return e.on("connection",e=>{t.set(e,0),e.once("close",()=>t.delete(e))}),e.on("request",(e,r)=>{const{socket:i}=e;t.set(i,t.get(i)+1),r.once("finish",()=>{const e=t.get(i)-1;t.set(i,e),s&&0===e&&i.end()})}),e.stop=r=>new Promise((i,n)=>{if(s)return i();s=!0;let o,a=!0;Array.from(t).map(([e,t])=>t||e.end()),e.close(e=>{if(e)return n(e);o&&clearTimeout(o),i(a)}),r&&(o=setTimeout(()=>{o=null,a=!1,Array.from(t.keys()).map(e=>e.end()),setImmediate(()=>Array.from(t.keys()).map(e=>e.destroy()))},r))}),e}function deserialize(e){return Array.isArray(e)?e.map(deserialize):null===e||"object"!=typeof e?e:"$$date$$"in e?new Date(e.$$date$$):"$$undefined$$"in e?void 0:Object.entries(e).reduce((e,[t,s])=>({...e,[t]:deserialize(s)}),{})}function serialize(e){return Array.isArray(e)?e.map(serialize):void 0===e?{$$undefined$$:!0}:e instanceof Date?{$$date$$:e.getTime()}:null===e||"object"!=typeof e?e:Object.entries(e).reduce((e,[t,s])=>({...e,[t]:serialize(s)}),{})}const priv=Symbol("jsrpc"),JSONRPC="2.0";class RpcServer extends EventEmitter{constructor(e){super();const{callTimeout:t,...s}=e,r=stoppable(http__default.createServer(handleRequest.bind(this)));Object.defineProperty(this,priv,{configurable:!0,value:{callTimeout:t,options:s,methods:{},server:r,started:!1}})}static create(e){return new RpcServer(e)}handle(e,t){return this[priv].methods[e]=t,this}start(){return new Promise((e,t)=>{const{started:s,server:r,options:i}=this[priv];if(s)return e(this);r.once("error",t),r.listen(i,s=>{if(s)return t(s);this[priv].started=!0,this.emit("start"),e(this)})})}get started(){return this[priv].started}get httpServer(){return this[priv].server}async stop(){this[priv].started&&(this[priv].started=!1,await this[priv].server.stop(5e3),this.emit("stop"))}}async function handleRequest(e,t){try{const{methods:s,callTimeout:r}=this[priv],i=await readBody(e),{id:n,jsonrpc:o,method:a,params:c}=i;if(o!==JSONRPC)throw new BadRequest(i);const l=s[a];if(!l)throw new MethodNotFound(i);if(!Array.isArray(c))throw new BadRequest(i);const d=deserialize(c);this.emit("call",{method:a,params:d});let u=Promise.resolve(l.apply(this,d));r&&(u=timeout(u,r));const h=serialize(await u);send(t,200,{jsonrpc:JSONRPC,result:h,id:n})}catch(e){const{name:s,message:r}=e,i=serialize({name:s,message:r,...e});send(t,e.status||500,{jsonrpc:JSONRPC,error:i,id:void 0})}}function send(e,t,s){s=JSON.stringify(s),e.writeHead(t,{"content-type":"application/json;charset=utf-8","content-length":Buffer.byteLength(s)}),e.end(s)}function readBody(e){return new Promise((t,s)=>{let r="";e.setEncoding("utf8"),e.on("error",s).on("data",e=>{r+=e}).on("end",()=>{try{t(JSON.parse(r))}catch(e){s(new BadRequest)}})})}function timeout(e,t){return new Promise((s,r)=>{const i=setTimeout(()=>r(new TimedOut),t);e.then(e=>{clearTimeout(i),s(e)},r)})}class CustomError extends Error{constructor(e,t){super(e),this.name=this.constructor.name,Error.captureStackTrace(this,this.constructor),Object.assign(this,t)}}class MethodNotFound extends CustomError{constructor(e){super("Method not found",{status:404,body:e})}}class BadRequest extends CustomError{constructor(e){super("Bad request",{status:400,body:e})}}class TimedOut extends CustomError{constructor(e){super("Timed out",{status:504,body:e})}}const jsonrpc="2.0";class RpcClient{constructor(e){this.options=e}async call(e,...t){const s=JSON.stringify({jsonrpc:jsonrpc,method:e,params:serialize(t)}),r={...this.options,method:"POST",headers:{"Content-Type":"application/json;charset=utf-8","Content-Length":Buffer.byteLength(s),Connection:"keep-alive"}},i=await makeRequest(r,s),n=await readResponse(i);if(n.error){const e=new Error;throw Object.assign(e,deserialize(n.error)),e}return deserialize(n.result)}}function makeRequest(e,t){return new Promise((s,r)=>{const i=http.request(e,s);i.once("error",r),i.write(t),i.end()})}async function readResponse(e){e.setEncoding("utf8");let t="";for await(const s of e)t+=s;return JSON.parse(t)}function _interopDefault$1(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var fs=_interopDefault$1(fs$1);class Lock{constructor({width:e=1}={}){this.width=e,this.count=0,this.awaiters=[]}acquire(){return this.count<this.width?(this.count++,Promise.resolve()):new Promise(e=>this.awaiters.push(e))}release(){this.count&&(this.waiting?this.awaiters.shift()():this.count--)}get waiting(){return this.awaiters.length}async exec(e){try{return await this.acquire(),await Promise.resolve(e())}finally{this.release()}}}class DatastoreError extends Error{constructor(e){super(e),this.name=this.constructor.name,Error.captureStackTrace(this,this.constructor)}}class KeyViolation extends DatastoreError{constructor(e,t){super("Key violation error"),this.fieldName=t,this.record=e}}class NotExists extends DatastoreError{constructor(e){super("Record does not exist"),this.record=e}}class NoIndex extends DatastoreError{constructor(e){super("No such index"),this.fieldName=e}}function delve(e,t){let s=0;for(t=t.split(".");e&&s<t.length;)e=e[t[s++]];return void 0===e||s<t.length?void 0:e}function getId(e,t){const s=hashString(stringify(e));for(let e=0;e<1e8;e++){const r=(s+e&2147483647).toString(36);if(!t.has(r))return r}throw new Error("Could not generate unique id")}function hashString(e){return Array.from(e).reduce((e,t)=>(e<<5)-e+t.charCodeAt(0)&4294967295,0)}function cleanObject(e){return Object.entries(e).reduce((e,[t,s])=>(void 0!==s&&(e[t]=s),e),{})}const DATE_SENTINEL="$jsdb$date$";function stringify(e){return JSON.stringify(e,(function(e,t){return this[e]instanceof Date?{[DATE_SENTINEL]:this[e].getTime()}:t}))}function parse$2(e){return JSON.parse(e,(function(e,t){return e===DATE_SENTINEL?new Date(t):"object"==typeof t&&DATE_SENTINEL in t?t[DATE_SENTINEL]:t}))}function sortOn(e){if("function"!=typeof e){const t=e;e=e=>delve(e,t)}return(t,s)=>{const r=e(t),i=e(s);return r<i?-1:r>i?1:0}}function makeArray(e){return Array.isArray(e)?e:[e]}const{readFile:readFile,appendFile:appendFile,open:open,rename:rename}=fs.promises;class Datastore{constructor(e){"string"==typeof e&&(e={filename:e}),this.options={serialize:stringify,deserialize:parse$2,special:{deleted:"$$deleted",addIndex:"$$addIndex",deleteIndex:"$$deleteIndex"},...e},this.loaded=!1,this._lock=new Lock,this._lock.acquire(),this._empty(),e.autoload&&this.load(),e.autocompact&&this.setAutoCompaction(e.autocompact)}async load(){this.loaded||(this.loaded=!0,await this._hydrate(),await this._rewrite(),this._lock.release())}reload(){return this._execute(()=>this._hydrate())}compact(e){return this._execute(()=>this._rewrite(e))}getAll(){return this._execute(()=>this._getAll())}async insert(e){return this._execute(async()=>(e=this._upsertDoc(e,{mustNotExist:!0}),await this._append(e),e))}async update(e){return this._execute(async()=>(e=this._upsertDoc(e,{mustExist:!0}),await this._append(e),e))}async upsert(e){return this._execute(async()=>(e=this._upsertDoc(e),await this._append(e),e))}async delete(e){const{deleted:t}=this.options.special;return this._execute(async()=>{const s=makeArray(e=this._deleteDoc(e)).map(e=>({[t]:e}));return await this._append(s),e})}async ensureIndex(e){const{fieldName:t}=e,{addIndex:s}=this.options.special;if(!this._indexes[t])return this._execute(()=>(this._addIndex(e),this._append({[s]:e})))}async deleteIndex(e){if("_id"===e)return;const{deleteIndex:t}=this.options.special;return this._execute(()=>(this._deleteIndex(e),this._append({[t]:{fieldName:e}})))}find(e,t){return this._execute(async()=>{if(!this._indexes[e])throw new NoIndex(e);return this._indexes[e].find(t)})}findOne(e,t){return this._execute(async()=>{if(!this._indexes[e])throw new NoIndex(e);return this._indexes[e].findOne(t)})}findAll(e){return this._execute(async()=>{if(!this._indexes[e])throw new NoIndex(e);return this._indexes[e].findAll()})}setAutoCompaction(e,t){this.stopAutoCompaction(),this.autoCompaction=setInterval(()=>this.compact(t),e)}stopAutoCompaction(){this.autoCompaction&&(clearInterval(this.autoCompaction),this.autoCompaction=void 0)}_execute(e){return this._lock.exec(e)}_empty(){this._indexes={_id:Index.create({fieldName:"_id",unique:!0})}}async _hydrate(){const{filename:e,deserialize:t,special:{deleted:s,addIndex:r,deleteIndex:i}}=this.options,n=await readFile(e,{encoding:"utf8",flag:"a+"});this._empty();for(const e of n.split(/\n/).filter(Boolean)){const n=t(e);r in n?this._addIndex(n[r]):i in n?this._deleteIndex(n[i].fieldName):s in n?this._deleteDoc(n[s]):this._upsertDoc(n)}}_getAll(){return Array.from(this._indexes._id.data.values())}_addIndex(e){const{fieldName:t}=e,s=Index.create(e);this._getAll().forEach(e=>s.insertDoc(e)),this._indexes[t]=s}_deleteIndex(e){delete this._indexes[e]}_upsertDoc(e,t={}){if(Array.isArray(e))return e.map(e=>this._upsertDoc(e,t));const{mustExist:s=!1,mustNotExist:r=!1}=t,i=this._indexes._id.find(e._id);if(!i&&s)throw new NotExists(e);if(i&&r)throw new KeyViolation(e,"_id");if(null==(e=cleanObject(e))._id){const t=getId(e,this._indexes._id.data);e={_id:t,...e}}const n=Object.values(this._indexes);try{return n.forEach(t=>{i&&t.deleteDoc(i),t.insertDoc(e)}),e}catch(t){throw n.forEach(t=>{t.deleteDoc(e),i&&(t.deleteDoc(i),t.insertDoc(i))}),t}}_deleteDoc(e){if(Array.isArray(e))return e.map(e=>this._deleteDoc(e));const t=Object.values(this._indexes),s=this._indexes._id.find(e._id);if(!s)throw new NotExists(e);return t.forEach(e=>e.deleteDoc(s)),s}async _append(e){const{filename:t,serialize:s}=this.options,r=makeArray(e).map(e=>s(e)+"\n").join("");await appendFile(t,r,"utf8")}async _rewrite({sorted:e=!1}={}){const{filename:t,serialize:s,special:{addIndex:r}}=this.options,i=t+"~",n=this._getAll();e&&("string"!=typeof e&&"function"!=typeof e&&(e="_id"),n.sort(sortOn(e)));const o=Object.values(this._indexes).filter(e=>"_id"!==e.options.fieldName).map(e=>({[r]:e.options})).concat(n).map(e=>s(e)+"\n"),a=await open(i,"w");await a.writeFile(o.join(""),"utf8"),await a.sync(),await a.close(),await rename(i,t)}}class Index{static create(e){return new(e.unique?UniqueIndex:Index)(e)}constructor(e){this.options=e,this.data=new Map}find(e){return this.data.get(e)||[]}findOne(e){const t=this.data.get(e);return t?t[0]:void 0}findAll(){return Array.from(this.data.entries())}addLink(e,t){let s=this.data.get(e);s||(s=[],this.data.set(e,s)),s.includes(t)||s.push(t)}removeLink(e,t){const s=this.data.get(e)||[],r=s.indexOf(t);-1!==r&&(s.splice(r,1),s.length||this.data.delete(e))}insertDoc(e){const t=delve(e,this.options.fieldName);null==t&&this.options.sparse||(Array.isArray(t)?t.forEach(t=>this.addLink(t,e)):this.addLink(t,e))}deleteDoc(e){const t=delve(e,this.options.fieldName);Array.isArray(t)?t.forEach(t=>this.removeLink(t,e)):this.removeLink(t,e)}}class UniqueIndex extends Index{find(e){return this.data.get(e)}findOne(e){return this.find(e)}addLink(e,t){if(this.data.has(e))throw new KeyViolation(t,this.options.fieldName);this.data.set(e,t)}removeLink(e,t){this.data.get(e)===t&&this.data.delete(e)}}Object.assign(Datastore,{KeyViolation:KeyViolation,NotExists:NotExists,NoIndex:NoIndex});var dist=Datastore;function portActive(e){return new Promise((t,s)=>{const r=setTimeout(()=>s(new Error("timed out connecting to server")),500),i=net.createConnection(e,()=>{clearTimeout(r),setImmediate(()=>{i.destroy(),t(!0)})});i.once("error",()=>{clearTimeout(r),t(!1)})})}function wrap(e){return(...t)=>Promise.resolve().then(()=>e(...t)).catch(e=>{console.error(e),process.exit(2)})}const jsdbMethods=new Set(["ensureIndex","deleteIndex","insert","update","upsert","delete","find","findOne","findAll","getAll","compact","reload"]);class JsdbServer extends RpcServer{constructor({files:e=".",idleTime:t="30m",...s}){super(s),e=path.resolve(e),t=ms(t+"");const r=Date.now();Object.assign(this,{files:e,idleTime:t,startTime:r}),this.openDatabases=new Map,this.handle("shutdown",shutdown.bind(this)).handle("status",status.bind(this)).handle("dispatch",dispatch.bind(this)).handle("housekeep",housekeep.bind(this)).handle("clear",clear.bind(this)),setInterval(housekeep.bind(this),t).unref()}}function shutdown(){setTimeout(()=>this.stop(5e3))}function status(){const e=Date.now();return{uptime:e-this.startTime,idleTime:this.idleTime,files:this.files,databases:Array.from(this.openDatabases.entries()).map(([t,{db:s,lastTouch:r}])=>({name:t,uptime:e-r}))}}function housekeep(){const e=Date.now();Array.from(this.openDatabases.entries()).forEach(([t,{lastTouch:s}])=>{e-s>this.idleTime&&this.openDatabases.delete(t)})}function clear(){this.openDatabases.clear()}async function dispatch(e,t,...s){if(!jsdbMethods.has(t))throw new Error(`Unknown method: ${t}`);e=path.resolve(this.files,e);const r=Date.now();let i;const n=this.openDatabases.get(e);return n?(n.lastTouch=r,i=n.db):(i=new dist(e),this.openDatabases.set(e,{db:i,lastTouch:r})),i.loaded||await i.load(),i[t](...s)}var version="2.0.8";const prog=lib$1("jsdbd"),DEFAULT_FILES=path.resolve(os.homedir(),".databases");async function startServer(e){let{files:t,idleTime:s,port:r,silent:i}=e;if(t=path.resolve(t),await portActive(r))return void(i||console.log(`Server already active on port ${r}`));const n=process.execPath,o=[...process.execArgv,process.argv[1],"__server","--port",r,"--files",t,"--idle-time",s];child_process.spawn(n,o,{stdio:"ignore",detached:!0}).unref(),i||console.log(`Serving databases in ${t} on port ${r}`)}function runServer(e){const{idleTime:t,files:s,port:r}=e,i=new JsdbServer({idleTime:t,files:s,port:r}),n=()=>i.stop();return process.on("SIGINT",n).on("SIGTERM",n),i.start()}async function showStatus({port:e}){const t=await sendCommand({port:e},"status");console.log(`jsdb server running on port ${e}\n`),console.log(`Uptime: ${ms(t.uptime,{long:!0})}`),console.log(`Housekeep every ${ms(t.idleTime)}`),console.log(`Database files: ${t.files}\n`);const{databases:s}=t;if(s.length){console.log("Databases open:");for(const{name:e,uptime:t}of s)console.log(`  ${e} (${ms(t,{long:!0})})`)}else console.log("No databases open")}async function stopServer({port:e}){await sendCommand({port:e},"shutdown"),console.log(`Server on port ${e} shut down`)}async function clearServer({port:e}){await sendCommand({port:e},"clear"),console.log(`All databases cleared on port ${e}`)}async function sendCommand({port:e},t,...s){return await portActive(e)||(console.log(`No server active on port ${e}`),process.exit(1)),new RpcClient({port:e}).call(t,...s)}prog.version(version).option("--port, -p","The port to use",39720),prog.command("status","shows the status of the jsdbd daemon",{default:!0}).action(wrap(showStatus)),prog.command("start","starts the server").option("-f, --files","where files area stored",DEFAULT_FILES).option("-s, --silent","be quiet").option("--idle-time","cleaning interval","30m").action(wrap(startServer)),prog.command("clear","closes all databases").action(wrap(clearServer)),prog.command("stop","stops the server").action(wrap(stopServer)),prog.command("__server","runs the server (internal use)").action(wrap(runServer)),prog.parse(process.argv,{alias:{idleTime:"idle-time"}});
