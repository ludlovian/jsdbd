#!/usr/bin/env node
"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var http=_interopDefault(require("http")),https=_interopDefault(require("https")),fs$1=_interopDefault(require("fs")),util=_interopDefault(require("util")),stoppable=(e,t)=>{t=void 0===t?1/0:t;const s=new Map;let i=!1,n=!0;return e instanceof https.Server?e.on("secureConnection",o):e.on("connection",o),e.on("request",function(e,t){s.set(e.socket,s.get(e.socket)+1),t.once("finish",()=>{const t=s.get(e.socket)-1;s.set(e.socket,t),i&&0===t&&e.socket.end()})}),e.stop=function(o){setImmediate(()=>{i=!0,t<1/0&&setTimeout(a,t).unref(),e.close(e=>{o&&o(e,n)}),s.forEach(r)})},e._pendingSockets=s,e;function o(e){s.set(e,0),e.once("close",()=>s.delete(e))}function r(e,t){0===e&&t.end()}function a(){n=!1,s.forEach((e,t)=>t.end()),setImmediate(()=>{s.forEach((e,t)=>t.destroy())})}};function deserialize(e){return Array.isArray(e)?e.map(deserialize):null===e||"object"!=typeof e?e:"$$date$$"in e?new Date(e.$$date$$):"$$undefined$$"in e?void 0:Object.entries(e).reduce((e,[t,s])=>({...e,[t]:deserialize(s)}),{})}function serialize(e){return Array.isArray(e)?e.map(serialize):void 0===e?{$$undefined$$:!0}:e instanceof Date?{$$date$$:e.getTime()}:null===e||"object"!=typeof e?e:Object.entries(e).reduce((e,[t,s])=>({...e,[t]:serialize(s)}),{})}const jsonrpc="2.0";class RpcServer{constructor(e){const{callTimeout:t=1e4,idleTimeout:s=3e5,...i}=e;this.callTimeout=t,this.idleTimeout=s,this.options=i,this.methods={},this.server=stoppable(http.createServer((e,t)=>this._handle(e,t)),5e3),this._touch()}static create(e){return new RpcServer(e)}on(e,t){return this.methods[e]=t,this}async start(){return new Promise((e,t)=>{this.server.once("error",t),this.server.listen(this.options,s=>{if(s)return t(s);this.log("start"),e(this)})})}stop(){return new Promise((e,t)=>{this.idleTimeout=void 0,this._touch(),this.server.stop(s=>{if(s)return t(s);this.log("stop"),e(this)})})}log(){}_touch(){this._idleTimeout&&(clearTimeout(this._idleTimeout),this._idleTimeout=void 0),this.idleTimeout&&(this._idleTimeout=setTimeout(this.stop.bind(this),this.idleTimeout))}async _handle(e,t){let s;try{this._touch();const i=await readBody(e);if(s=i.id,i.jsonrpc!==jsonrpc)throw new BadRequest;const n=this.methods[i.method];if(!n)throw new MethodNotFound;if(!Array.isArray(i.params))throw new BadRequest;const o=deserialize(i.params);this.log("handle",i.method,...o);let r=Promise.resolve(n(...o));this.callTimeout&&(r=timeout(r,this.callTimeout));const a=serialize(await r);send(t,200,{jsonrpc:jsonrpc,result:a,id:s})}catch(e){const{name:i,message:n}=e,o=serialize({name:i,message:n,...e});send(t,e.status||500,{jsonrpc:jsonrpc,error:o,id:s})}}}function send(e,t,s){s=JSON.stringify(s),e.writeHead(t,{"content-type":"application/json;charset=utf-8","content-length":Buffer.byteLength(s)}),e.end(s)}function readBody(e){return new Promise((t,s)=>{let i="";e.setEncoding("utf8"),e.on("error",s).on("data",e=>{i+=e}).on("end",()=>{try{t(JSON.parse(i))}catch(e){s(new BadRequest)}})})}function timeout(e,t){return new Promise((s,i)=>{let n=setTimeout(()=>i(new TimedOut),t);e.then(e=>{clearTimeout(n),s(e)},i)})}class CustomError extends Error{constructor(e,t){super(e),this.name=this.constructor.name,Error.captureStackTrace(this,this.constructor),Object.assign(this,t)}}class MethodNotFound extends CustomError{constructor(){super("Method not found",{status:404})}}class BadRequest extends CustomError{constructor(){super("Bad request",{status:400})}}class TimedOut extends CustomError{constructor(){super("Timed out",{status:504})}}class PLock{constructor(e=1){this.width=e,this.locks=0,this._awaiters=[]}lock(){return this.locks<this.width?(this.locks++,Promise.resolve()):new Promise(e=>this._awaiters.push(e))}release(){this.locks&&(this._awaiters.length?this._awaiters.shift()():this.locks--)}get waiting(){return this._awaiters.length}async exec(e){try{return await this.lock(),await Promise.resolve(e())}finally{this.release()}}}var dist=Object.freeze({default:PLock});function getCjsExportFromNamespace(e){return e&&e.default||e}var require$$1=getCjsExportFromNamespace(dist);function _interopDefault$1(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var fs=_interopDefault$1(fs$1),PLock$1=_interopDefault$1(require$$1);class DatastoreError extends Error{constructor(e){super(e),this.name=this.constructor.name,Error.captureStackTrace(this,this.constructor)}}class KeyViolation extends DatastoreError{constructor(e,t){super("Key violation error"),this.fieldName=t,this.record=e}}class NotExists extends DatastoreError{constructor(e){super("Record does not exist"),this.record=e}}function delve(e,t){let s=0;for(t=t.split(".");e&&s<t.length;)e=e[t[s++]];return void 0===e||s<t.length?void 0:e}function getRandomString(e){return Math.random().toString(36).slice(2,2+e)}function getRandomId(){return`${getRandomString(6)}-${getRandomString(6)}`}function cleanObject(e){return Object.entries(e).reduce((e,[t,s])=>(void 0!==s&&(e[t]=s),e),{})}const DATE_SENTINEL="$jsdb$date$";function stringify(e){return JSON.stringify(e,function(e,t){return this[e]instanceof Date?{[DATE_SENTINEL]:this[e].getTime()}:t})}function parse(e){return JSON.parse(e,function(e,t){return e===DATE_SENTINEL?new Date(t):"object"==typeof t&&DATE_SENTINEL in t?t[DATE_SENTINEL]:t})}class Index{static create(e,t){return t.unique?new UniqueIndex(e,t):new Index(e,t)}constructor(e,t){this._execute=e._execute.bind(e),this.options=t,this._data=new Map}find(e){return this._execute(()=>this._data.get(e)||[])}findOne(e){return this._execute(()=>{const t=this._data.get(e);return t?t[0]:void 0})}getAll(){return this._execute(()=>Array.from(this._data.entries()))}_addLink(e,t){let s=this._data.get(e);s||(s=[],this._data.set(e,s)),s.includes(t)||s.push(t)}_removeLink(e,t){const s=this._data.get(e)||[],i=s.indexOf(t);-1!==i&&(s.splice(i,1),s.length||this._data.delete(e))}_insertDoc(e){let t=delve(e,this.options.fieldName);null==t&&this.options.sparse||(Array.isArray(t)?t.forEach(t=>this._addLink(t,e)):this._addLink(t,e))}_deleteDoc(e){let t=delve(e,this.options.fieldName);Array.isArray(t)?t.forEach(t=>this._removeLink(t,e)):this._removeLink(t,e)}}class UniqueIndex extends Index{find(e){return this.findOne(e)}findOne(e){return this._execute(()=>this._data.get(e))}_addLink(e,t){if(this._data.has(e))throw new KeyViolation(t,this.options.fieldName);this._data.set(e,t)}_removeLink(e,t){this._data.delete(e)}}const readFile=util.promisify(fs.readFile),appendFile=util.promisify(fs.appendFile),openFile=util.promisify(fs.open),writeFile=util.promisify(fs.writeFile),syncFile=util.promisify(fs.fsync),closeFile=util.promisify(fs.close),renameFile=util.promisify(fs.rename);class Datastore{constructor(e){"string"==typeof e&&(e={filename:e}),this.options={serialize:stringify,deserialize:parse,special:{deleted:"$$deleted",addIndex:"$$addIndex",deleteIndex:"$$deleteIndex"},...e},this.loaded=!1,this._lock=new PLock$1,this._lock.lock(),this._empty(),e.autoload&&this.load(),e.autocompact&&this.setAutoCompaction(e.autocompact)}async load(){return this._loaded?this._loaded:(this._loaded=this._hydrate().then(()=>this._lock.release()).then(()=>this.compact()).then(()=>{this.loaded=!0}),this._loaded)}compact(){return this._execute(()=>this._rewrite())}getAll(){return this._execute(()=>this._getAll())}async insert(e){return this._execute(async()=>(e=this._upsertDoc(e,{mustNotExist:!0}),await this._append(e),e))}async update(e){return this._execute(async()=>(e=this._upsertDoc(e,{mustExist:!0}),await this._append(e),e))}async delete(e){const{deleted:t}=this.options.special;return this._execute(async()=>(e=this._deleteDoc(e),await this._append({[t]:e}),e))}async ensureIndex(e){const{fieldName:t}=e,{addIndex:s}=this.options.special;if(!this.indexes[t])return this._execute(()=>(this._addIndex(e),this._append({[s]:e})))}async deleteIndex(e){if("_id"===e)return;const{deleteIndex:t}=this.options.special;return this._execute(()=>(this._deleteIndex(e),this._append({[t]:{fieldName:e}})))}setAutoCompaction(e){this.stopAutoCompaction(),this.autoCompaction=setInterval(()=>this.compact(),e)}stopAutoCompaction(){this.autoCompaction&&(clearInterval(this.autoCompaction),this.autoCompaction=void 0)}_execute(e){return this._lock.exec(e)}_empty(){this.indexes={_id:Index.create(this,{fieldName:"_id",unique:!0})}}async _hydrate(){const{filename:e,deserialize:t,special:{deleted:s,addIndex:i,deleteIndex:n}}=this.options,o=await readFile(e,{encoding:"utf8",flag:"a+"});this._empty();for(const e of o.split(/\n/).filter(Boolean)){let o=t(e);i in o?this._addIndex(o[i]):n in o?this._deleteIndex(o[n].fieldName):s in o?this._deleteDoc(o[s]):this._upsertDoc(o)}}_getAll(){return Array.from(this.indexes._id._data.values())}_addIndex(e){const{fieldName:t}=e,s=Index.create(this,e);this._getAll().forEach(e=>s._insertDoc(e)),this.indexes[t]=s}_deleteIndex(e){delete this.indexes[e]}_upsertDoc(e,{mustExist:t=!1,mustNotExist:s=!1}={}){const i=this.indexes._id._data.get(e._id);if(!i&&t)throw new NotExists(e);if(i&&s)throw new KeyViolation(e,"_id");null==(e=cleanObject(e))._id&&(e={_id:getRandomId(),...e});const n=Object.values(this.indexes);try{return n.forEach(t=>{i&&t._deleteDoc(i),t._insertDoc(e)}),e}catch(t){throw n.forEach(t=>{t._deleteDoc(e),i&&(t._deleteDoc(i),t._insertDoc(i))}),t}}_deleteDoc(e){const t=Object.values(this.indexes),s=this.indexes._id._data.get(e._id);if(!s)throw new NotExists(e);return t.forEach(e=>e._deleteDoc(s)),s}async _append(e){const{filename:t,serialize:s}=this.options,i=s(e)+"\n";await appendFile(t,i,"utf8")}async _rewrite(e){const{filename:t,serialize:s,special:{addIndex:i}}=this.options,n=t+"~",o=Array.from(this._getAll()).map(e=>s(e)+"\n"),r=Object.values(this.indexes).filter(e=>"_id"!==e.options.fieldName).map(e=>({[i]:e.options})).map(e=>s(e)+"\n");o.push(...r);const a=await openFile(n,"w");await writeFile(a,o.join(""),"utf8"),await syncFile(a),await closeFile(a),await renameFile(n,t)}}Object.assign(Datastore,{KeyViolation:KeyViolation,NotExists:NotExists});var dist$1=Datastore;class JsdbServer extends RpcServer{constructor(e){super(e),this._dbs=new Map;for(const e of METHODS)this.on(e,this[e].bind(this));e.log&&(this.log=console.log.bind(console))}async connect(e){"string"==typeof e&&(e={filename:e});const{filename:t}=e;if(!this._dbs.has(t)){const s=new dist$1(e);await s.load(),this._dbs.set(t,s)}const s=this._dbs.get(t);return Object.values(s.indexes).map(e=>e.options)}async getAll(e){return this._dbs.get(e).getAll()}async insert(e,t){return this._dbs.get(e).insert(t)}async update(e,t){return this._dbs.get(e).update(t)}async delete(e,t){return this._dbs.get(e).delete(t)}async ensureIndex(e,t){return this._dbs.get(e).ensureIndex(t)}async deleteIndex(e,t){return this._dbs.get(e).deleteIndex(t)}async compact(e){return this._dbs.get(e).compact()}async setAutoCompaction(e,t){return this._dbs.get(e).setAutoCompaction(t)}async stopAutoCompaction(e){return this._dbs.get(e).stopAutoCompaction()}async indexFind(e,t,s){return this._dbs.get(e).indexes[t].find(s)}async indexFindOne(e,t,s){return this._dbs.get(e).indexes[t].findOne(s)}async indexGetAll(e,t){return this._dbs.get(e).indexes[t].getAll()}}const METHODS=["connect","getAll","insert","update","delete","ensureIndex","deleteIndex","compact","setAutoCompaction","stopAutoCompaction","indexFind","indexFindOne","indexGetAll"];function toArr(e){return null==e?[]:Array.isArray(e)?e:[e]}function toVal(e,t,s,i){var n,o=e[t],r=~i.string.indexOf(t)?null==s||!0===s?"":String(s):"boolean"==typeof s?s:~i.boolean.indexOf(t)?"false"!==s&&("true"===s||(e._.push(0*(n=+s)==0?n:s),!!s)):0*(n=+s)==0?n:s;e[t]=null==o?r:Array.isArray(o)?o.concat(r):[o,r]}var lib=function(e,t){t=t||{};var s,i,n,o,r,a={_:[]},c=0,d=0,l=0,u=(e=e||[]).length;const h=void 0!==t.alias,p=void 0!==t.unknown,f=void 0!==t.default;if(t.alias=t.alias||{},t.string=toArr(t.string),t.boolean=toArr(t.boolean),h)for(s in t.alias)for(i=t.alias[s]=toArr(t.alias[s]),c=0;c<i.length;c++)(t.alias[i[c]]=i.concat(s)).splice(c,1);if(t.boolean.forEach(e=>{t.boolean=t.boolean.concat(t.alias[e]=t.alias[e]||[])}),t.string.forEach(e=>{t.string=t.string.concat(t.alias[e]=t.alias[e]||[])}),f)for(s in t.default)t.alias[s]=t.alias[s]||[],(t[typeof t.default[s]]||[]).push(s);const _=p?Object.keys(t.alias):[];for(c=0;c<u;c++){if("--"===(n=e[c])){a._=a._.concat(e.slice(++c));break}for(d=0;d<n.length&&45===n.charCodeAt(d);d++);if(0===d)a._.push(n);else if("no-"===n.substring(d,d+3)){if(o=n.substring(d+3),p&&!~_.indexOf(o))return t.unknown(n);a[o]=!1}else{for(l=d+1;l<n.length&&61!==n.charCodeAt(l);l++);for(o=n.substring(d,l),r=n.substring(++l)||c+1===u||45===(""+e[c+1]).charCodeAt(0)||e[++c],i=2===d?[o]:o,l=0;l<i.length;l++){if(o=i[l],p&&!~_.indexOf(o))return t.unknown("-".repeat(d)+o);toVal(a,o,l+1<i.length||r,t)}}}if(f)for(s in t.default)void 0===a[s]&&(a[s]=t.default[s]);if(h)for(s in a)for(i=t.alias[s]||[];i.length>0;)a[i.shift()]=a[s];return a};function main(){const e=readOptions(),t=new JsdbServer(e),s=t.stop.bind(t);return process.on("SIGTERM",s).on("SIGINT",s),t.start()}function readOptions(){const e=lib(process.argv.slice(2),{alias:{t:"timeout",p:"port",l:"log"}});return{idleTimeout:e.timeout,port:e.port,log:!!e.log}}main();
